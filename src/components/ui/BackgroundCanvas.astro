---

---

<div class="w-full overflow-y-visible">
  <canvas id="home-canvas" class="min-w-full sticky"></canvas>
  <div id="injection-port" class="min-w-full"></div>
  <svg
    hidden
    id="strokes"
    xmlns="http://www.w3.org/2000/svg"
    version="1.1"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    viewBox="0 0 800 400"
    ><path
      d="M55.156951904296875,307.6233215332031C57.59790823618571,287.77728169759115,64.53512603759765,161.98504765828451,75.78475189208984,139.91030883789062C87.03437774658204,117.83557001749675,133.03138739267985,109.29596323649089,150.22421264648438,121.07623291015625C167.4170379002889,132.85650258382162,210.88789108276367,215.5829586283366,221.07623291015625,239.46188354492188C231.26457473754883,263.34080846150715,228.78774963378908,311.30195317586265,236.3228759765625,322.8699645996094C243.85800231933592,334.4379760233561,268.83407485961914,343.16292505900066,284.75335693359375,337.2197265625C300.67263900756836,331.27652806599934,357.6920809936523,291.7488897196452,370.8520202636719,272.645751953125C384.0119595336914,253.54261418660482,380.6816003926595,198.1778848139445,395.964111328125,175.78475952148438C411.2466222635905,153.39163422902425,479.94170552571615,91.47384358723959,500,83.40807342529297C520.0582944742838,75.34230326334635,548.2779972330729,85.65471274058024,565.4708251953125,107.62332153320312C582.6636531575521,129.591930325826,633.2989723714193,245.6038801574707,645.29150390625,269.05828857421875C657.2840354410807,292.5126969909668,662.6771533203125,299.35574752807617,666.816162109375,305.82958984375C670.9551708984375,312.30343215942383,678.677118733724,321.64424352010093,680.26904296875,323.7668151855469"
      fill="none"
      stroke-width="25"
      stroke='url("#SvgjsLinearGradient1001")'
      stroke-linecap="round"
      transform="matrix(1,0,0,1,32.287017822265625,-9.908035278320312)"
      stroke-dasharray="0 0"
      stroke-opacity="1"></path><defs
      ><linearGradient id="SvgjsLinearGradient1001"
        ><stop stop-color="hsl(162, 100%, 58%)" offset="0"></stop><stop
          stop-color="hsl(270, 73%, 53%)"
          offset="1"></stop></linearGradient
      ></defs
    ></svg
  >
  <script>
    // IMPORTS & SETUP
    import Two from "two.js";
    const canvas = document.getElementById("home-canvas") as HTMLCanvasElement;
    const injection = document.getElementById("injection-port");
    const two = new Two({
      fitted: true,
      domElement: canvas,
    }).appendTo(document.getElementById("background-home"));
    two.renderer.domElement.style.background = "black";

    let parent = document.getElementById("home-canvas").parentElement;

    const strokes = two.interpret(document.querySelector("svg#strokes"));
    strokes.visible = false;
    strokes.subdivide();
    strokes.stroke = new Two.LinearGradient(0, 0, 500, 500, [
      new Two.Stop(0, "hsl(162, 100%, 58%)"),
      new Two.Stop(0.5, "hsl(270, 73%, 53%)"),
      new Two.Stop(1, "hsl(270, 73%, 53%)"),
    ]);

    const buffer = canvas.getBoundingClientRect().top - document.body.getBoundingClientRect().top

    window.addEventListener("scroll", (e) => {
      const trueY = window.scrollY - buffer;
      strokes.ending = trueY / two.height;
      if (strokes.ending < 1e-10) strokes.visible = false;
      else strokes.visible = true;
    });

    // STAR BACKGROUND
    const margin = 2;
    const stars = [];
    const numberOfStars = 200;

    const leftBound = -two.width / 2 + margin;
    const rightBound = two.width / 2 - margin;
    const topBound = -two.height / 2 + margin;
    const bottomBound = two.height / 2 - margin;

    function getRandom(min: number, max: number) {
      return Math.random() * (max - min) + min;
    }

    for (let i = 0; i < numberOfStars; i++) {
      stars.push(
        two.makeCircle(
          getRandom(leftBound, rightBound),
          getRandom(topBound, bottomBound),
          getRandom(1.5, 3.3),
        ),
      );
    }

    stars.forEach((star) => {
      star.fill = "ivory";
      star.stroke = "slateblue";
      star.linewidth = 2;
      star.speed = getRandom(0.5, 3.3);
    });

    const group = two.makeGroup(...stars);

    group.translation.set(two.width / 2, two.height / 2);

    var renderStars = true;

    two.bind("update", (frameCount: number) => {
        if (frameCount % 1000 == 0) renderStars = !renderStars;
        stars.forEach((star) => {
          if (renderStars) {
            star.visible = true;
            star.translation.x -= star.speed;

            // Wrap around right
            if (star.translation.x > rightBound) star.translation.x = leftBound;

            // Wrap around left
            if (star.translation.x < leftBound) star.translation.x = rightBound;
          } else star.visible = false;
        });
      }).play();

    // FINAL ADDITIONS
    two.add(strokes);

    two.update();
  </script>
</div>
